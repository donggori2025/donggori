{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/app/sign-up/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useRef, useEffect } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { useSignUp } from \"@clerk/nextjs\";\nimport { useRouter } from \"next/navigation\";\n\nexport default function SignUpPage() {\n  // 입력값 상태\n  const [email, setEmail] = useState(\"\");\n  const [emailVerified, setEmailVerified] = useState(false); // 이메일 인증 여부\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  // 약관 동의 상태\n  const [agreeAll, setAgreeAll] = useState(false);\n  const [agreeTerms, setAgreeTerms] = useState(false);\n  const [agreePrivacy, setAgreePrivacy] = useState(false);\n  const [agreeMarketing, setAgreeMarketing] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [verificationSent, setVerificationSent] = useState(false);\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [timer, setTimer] = useState(0); // 남은 시간(초)\n  const [canResend, setCanResend] = useState(false); // 재요청 가능 여부\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const { signUp, setActive } = useSignUp();\n  const router = useRouter();\n\n  // 전체동의 <-> 개별동의 상태 동기화\n  useEffect(() => {\n    if (agreeTerms && agreePrivacy && agreeMarketing) {\n      setAgreeAll(true);\n    } else {\n      setAgreeAll(false);\n    }\n  }, [agreeTerms, agreePrivacy, agreeMarketing]);\n\n  // 전체동의 클릭 시 모든 항목 동기화\n  const handleAgreeAll = (checked: boolean) => {\n    setAgreeAll(checked);\n    setAgreeTerms(checked);\n    setAgreePrivacy(checked);\n    setAgreeMarketing(checked);\n  };\n\n  // 타이머 시작 함수\n  const startTimer = () => {\n    setTimer(180); // 3분(180초)\n    setCanResend(false);\n    if (timerRef.current) clearInterval(timerRef.current);\n    timerRef.current = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(timerRef.current!);\n          setCanResend(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  // 타이머 정리\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, []);\n\n  // 이메일 인증 요청\n  const handleEmailVerify = async () => {\n    setError(\"\");\n    if (!email) {\n      setError(\"이메일을 입력해주세요.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      await signUp?.create({ emailAddress: email, password: password || \"TempPassword!1\" });\n      await signUp?.prepareEmailAddressVerification({ strategy: \"email_code\" });\n      setVerificationSent(true);\n      setVerificationCode(\"\");\n      startTimer();\n    } catch (err: unknown) {\n      setError(err instanceof Error ? err.message : \"이메일 인증 요청 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 인증번호 재요청\n  const handleResend = async () => {\n    setError(\"\");\n    setLoading(true);\n    try {\n      await signUp?.prepareEmailAddressVerification({ strategy: \"email_code\" });\n      setVerificationCode(\"\");\n      startTimer();\n    } catch (err: unknown) {\n      setError(err instanceof Error ? err.message : \"인증번호 재요청 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 이메일 인증 코드 제출\n  const handleVerifyCode = async () => {\n    setError(\"\");\n    setLoading(true);\n    try {\n      const res = await signUp?.attemptEmailAddressVerification({ code: verificationCode });\n      if (res?.status === \"complete\") {\n        setEmailVerified(true);\n        setError(\"\");\n        if (timerRef.current) clearInterval(timerRef.current);\n      } else {\n        setError(\"인증 코드가 올바르지 않습니다.\");\n      }\n    } catch (err: unknown) {\n      setError(err instanceof Error ? err.message : \"이메일 인증 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 회원가입 폼 제출\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    if (!email) return setError(\"이메일을 입력해주세요.\");\n    if (!emailVerified) return setError(\"이메일 인증을 완료해주세요.\");\n    if (!password) return setError(\"비밀번호를 입력해주세요.\");\n    if (password.length < 6) return setError(\"비밀번호는 6자 이상이어야 합니다.\");\n    if (password !== passwordConfirm) return setError(\"비밀번호가 일치하지 않습니다.\");\n    if (!agreeTerms || !agreePrivacy) return setError(\"필수 약관에 동의해주세요.\");\n    setLoading(true);\n    try {\n      if (!signUp || !signUp.createdSessionId) {\n        setError(\"\");\n        setLoading(true);\n        setTimeout(() => window.location.replace(\"/\"), 2500);\n        return;\n      }\n      await setActive({ session: signUp.createdSessionId });\n      router.push(\"/\");\n    } catch (err: unknown) {\n      setError(\n        err instanceof Error ? err.message :\n        \"예상치 못한 오류가 발생했습니다. 새로고침 후 다시 시도해주세요.\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 소셜 로그인 핸들러 (추후 Clerk 연동)\n  const handleSocial = (provider: string) => {\n    alert(`${provider} 소셜 로그인 연동 예정`);\n  };\n\n  // 타이머를 mm:ss 형식으로 변환\n  const formatTime = (sec: number) => {\n    const m = Math.floor(sec / 60).toString().padStart(2, \"0\");\n    const s = (sec % 60).toString().padStart(2, \"0\");\n    return `${m}:${s}`;\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-white\">\n      {/* 상단 로고/타이틀/설명 */}\n      <div className=\"mb-8 flex flex-col items-center\">\n        <Image src=\"/logo_0624.svg\" alt=\"동고리 로고\" width={80} height={80} className=\"mb-2\" />\n        <h1 className=\"text-4xl font-extrabold tracking-tight mb-2\">DONG<span className=\"text-black\">GORI</span></h1>\n        <div className=\"text-lg font-semibold text-gray-700 mb-1\">봉제공장이 필요한 순간, 동고리</div>\n        <div className=\"text-gray-500 text-sm\">\n          아직 회원 아니신가요? <Link href=\"/sign-up\" className=\"text-blue-500 font-semibold\">회원가입</Link>\n        </div>\n      </div>\n      {/* 회원가입 폼 */}\n      <form onSubmit={handleSubmit} className=\"w-full max-w-md bg-white rounded-xl shadow p-8 flex flex-col gap-4\">\n        {/* Clerk Smart CAPTCHA 위젯 */}\n        <div id=\"clerk-captcha\" className=\"mb-2\" />\n        <label className=\"text-sm font-semibold\">이메일</label>\n        <div className=\"flex gap-2\">\n          <input\n            type=\"email\"\n            placeholder=\"이메일을 입력해주세요.\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            required\n            className=\"border rounded px-3 py-2 flex-1\"\n            disabled={emailVerified}\n          />\n          {!emailVerified && !verificationSent && (\n            <button type=\"button\" onClick={handleEmailVerify} className=\"px-4 py-2 bg-gray-200 rounded text-sm font-semibold hover:bg-gray-300\" disabled={loading}>\n              이메일 인증\n            </button>\n          )}\n          {verificationSent && !emailVerified && (\n            <button type=\"button\" className=\"px-4 py-2 bg-gray-200 rounded text-sm font-semibold\" disabled>\n              인증코드 발송됨\n            </button>\n          )}\n          {emailVerified && (\n            <span className=\"px-4 py-2 bg-green-100 text-green-700 rounded text-sm font-semibold\">인증완료</span>\n          )}\n        </div>\n        {/* 인증코드 입력 및 타이머 */}\n        {verificationSent && !emailVerified && (\n          <div className=\"flex gap-2 items-center\">\n            <input\n              type=\"text\"\n              placeholder=\"인증코드 입력\"\n              value={verificationCode}\n              onChange={e => setVerificationCode(e.target.value)}\n              className=\"border rounded px-3 py-2 flex-1\"\n            />\n            <button type=\"button\" onClick={handleVerifyCode} className=\"px-4 py-2 bg-blue-500 text-white rounded text-sm font-semibold hover:bg-blue-600\" disabled={loading}>\n              인증 확인\n            </button>\n            {/* 타이머/재요청 */}\n            {!canResend ? (\n              <span className=\"text-xs text-gray-500 w-16 text-center\">{formatTime(timer)}</span>\n            ) : (\n              <button type=\"button\" onClick={handleResend} className=\"text-xs text-blue-500 underline w-16 text-center\" disabled={loading}>\n                인증번호 재요청\n              </button>\n            )}\n          </div>\n        )}\n        <label className=\"text-sm font-semibold\">비밀번호</label>\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호를 입력해주세요.\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n          className=\"border rounded px-3 py-2\"\n          disabled={!emailVerified}\n        />\n        <label className=\"text-sm font-semibold\">비밀번호 확인</label>\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호를 다시 입력해주세요.\"\n          value={passwordConfirm}\n          onChange={e => setPasswordConfirm(e.target.value)}\n          required\n          className=\"border rounded px-3 py-2\"\n          disabled={!emailVerified}\n        />\n        {/* 약관 동의 영역 */}\n        <div className=\"flex flex-col gap-2 mt-2\">\n          {/* 전체 동의 */}\n          <div className=\"flex items-center gap-2\">\n            <input\n              type=\"checkbox\"\n              checked={agreeAll}\n              onChange={e => handleAgreeAll(e.target.checked)}\n              id=\"agree-all\"\n              className=\"w-4 h-4\"\n              required\n            />\n            <label htmlFor=\"agree-all\" className=\"text-sm font-semibold text-gray-700\">전체 동의</label>\n          </div>\n          <div className=\"pl-6 flex flex-col gap-1\">\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={agreeTerms}\n                onChange={e => setAgreeTerms(e.target.checked)}\n                id=\"agree-terms\"\n                className=\"w-4 h-4\"\n                required\n              />\n              <Link href=\"/terms/service\" target=\"_blank\" className=\"text-sm text-gray-700 underline hover:text-toss-blue\">이용약관 동의(필수)</Link>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={agreePrivacy}\n                onChange={e => setAgreePrivacy(e.target.checked)}\n                id=\"agree-privacy\"\n                className=\"w-4 h-4\"\n                required\n              />\n              <Link href=\"/terms/privacy\" target=\"_blank\" className=\"text-sm text-gray-700 underline hover:text-toss-blue\">개인정보이용동의(필수)</Link>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"checkbox\"\n                checked={agreeMarketing}\n                onChange={e => setAgreeMarketing(e.target.checked)}\n                id=\"agree-marketing\"\n                className=\"w-4 h-4\"\n              />\n              <Link href=\"/terms/marketing\" target=\"_blank\" className=\"text-sm text-gray-700 underline hover:text-toss-blue\">마케팅정보활용동의(선택)</Link>\n            </div>\n          </div>\n        </div>\n        {error && <div className=\"text-red-500 text-sm text-center\">{error}</div>}\n        <button\n          type=\"submit\"\n          className=\"w-full bg-black text-white py-3 rounded font-bold text-lg mt-2 hover:bg-gray-900 transition disabled:bg-gray-200 disabled:text-gray-400 disabled:cursor-not-allowed\"\n          disabled={\n            loading ||\n            !email ||\n            !emailVerified ||\n            !password ||\n            password.length < 6 ||\n            password !== passwordConfirm ||\n            !agreeTerms ||\n            !agreePrivacy\n          }\n        >\n          {loading ? \"가입 중...\" : \"회원가입\"}\n        </button>\n        {/* 구분선 */}\n        <div className=\"flex items-center my-4\">\n          <div className=\"flex-1 h-px bg-gray-200\" />\n          <span className=\"mx-4 text-gray-400 text-sm\">SNS 계정으로 로그인/회원가입</span>\n          <div className=\"flex-1 h-px bg-gray-200\" />\n        </div>\n        {/* 소셜 로그인 버튼 */}\n        <div className=\"flex justify-center gap-6 mt-2\">\n          <button type=\"button\" onClick={() => handleSocial(\"google\")}\n            className=\"w-12 h-12 rounded-full border flex items-center justify-center bg-white shadow hover:shadow-md\">\n            <Image src=\"/google.svg\" alt=\"구글\" width={28} height={28} />\n          </button>\n          <button type=\"button\" onClick={() => handleSocial(\"kakao\")}\n            className=\"w-12 h-12 rounded-full border flex items-center justify-center bg-yellow-300 shadow hover:shadow-md\">\n            <Image src=\"/kakao.svg\" alt=\"카카오\" width={28} height={28} />\n          </button>\n          <button type=\"button\" onClick={() => handleSocial(\"naver\")}\n            className=\"w-12 h-12 rounded-full border flex items-center justify-center bg-green-400 shadow hover:shadow-md\">\n            <Image src=\"/naver.svg\" alt=\"네이버\" width={28} height={28} />\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}