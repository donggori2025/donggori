{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n \nexport const supabase = createClient(supabaseUrl, supabaseAnonKey); "],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/app/factories/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"@/lib/supabaseClient\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowPathIcon, ChevronDownIcon } from \"@heroicons/react/24/outline\";\nimport { List, Map as MapIcon } from \"lucide-react\";\nimport type { Factory } from \"@/lib/factories\";\n\n// 태그별 색상 매핑 함수\nfunction getTagColor(tag: string) {\n  switch (tag) {\n    case \"봉제\": return \"bg-blue-100 text-blue-700\";\n    case \"나염\": return \"bg-orange-100 text-orange-700\";\n    case \"자수\": return \"bg-green-100 text-green-700\";\n    case \"샘플\": return \"bg-purple-100 text-purple-700\";\n    case \"QC\": return \"bg-pink-100 text-pink-700\";\n    case \"다이마루\": return \"bg-yellow-100 text-yellow-700\";\n    case \"직기\": return \"bg-cyan-100 text-cyan-700\";\n    default: return \"bg-gray-100 text-gray-700\";\n  }\n}\n\nexport default function FactoriesPage() {\n  const [factories, setFactories] = useState<Factory[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // 검색 상태\n  const [search, setSearch] = useState(\"\");\n\n  // 필터 상태 (여러 개 선택 가능하도록 배열로 변경)\n  const [selected, setSelected] = useState({\n    admin_district: [] as string[],\n    moq: [] as string[],\n    monthly_capacity: [] as string[],\n    business_type: [] as string[],\n    distribution: [] as string[],\n    delivery: [] as string[],\n    items: [] as string[],\n    equipment: [] as string[],\n    sewing_machines: [] as string[],\n    pattern_machines: [] as string[],\n    special_machines: [] as string[],\n    factory_type: [] as string[],\n    main_fabrics: [] as string[],\n    processes: [] as string[],\n  });\n\n  // Range 옵션\n  const moqRanges = [\n    { label: \"0-50\", min: 0, max: 50 },\n    { label: \"51-100\", min: 51, max: 100 },\n    { label: \"101-300\", min: 101, max: 300 },\n    { label: \"301+\", min: 301, max: Infinity },\n  ];\n  const monthlyCapacityRanges = [\n    { label: \"0-100\", min: 0, max: 100 },\n    { label: \"101-300\", min: 101, max: 300 },\n    { label: \"301-500\", min: 301, max: 500 },\n    { label: \"501+\", min: 501, max: Infinity },\n  ];\n\n  // 목록/지도 뷰 상태\n  const [view, setView] = useState<'list' | 'map'>('list');\n\n  // 옵션 동적 추출 함수 (중복 없는 값, 분리 처리)\n  function getOptions(key: string): string[] {\n    if (key === 'business_type' || key === 'distribution' || key === 'delivery') {\n      const values = factories.flatMap(f => (f[key] ? String(f[key]).split(',').map((v: string) => v.trim()) : []));\n      return Array.from(new Set(values.filter(Boolean)));\n    }\n    if (key === 'equipment') {\n      // |로 카테고리 분리, :로 카테고리명/값 분리, 쉼표로 하위 항목 분리\n      const all = factories.flatMap(f => (f.equipment ? String(f.equipment).split('|').map((v: string) => v.trim()) : []));\n      const byCategory: Record<string, string[]> = {};\n      all.forEach(str => {\n        const [cat, vals] = str.split(':').map(s => s.trim());\n        if (cat && vals) {\n          byCategory[cat] = [...(byCategory[cat] || []), ...vals.split(',').map((v: string) => v.trim())];\n        }\n      });\n      // 중복 제거\n      Object.keys(byCategory).forEach(cat => {\n        byCategory[cat] = Array.from(new Set(byCategory[cat].filter(Boolean)));\n      });\n      // equipment는 실제로 string[]로 반환하지 않으므로 빈 배열 반환\n      return [];\n    }\n    if (key === 'sewing_machines' || key === 'pattern_machines' || key === 'special_machines') {\n      // 쉼표로 분리, 중복 없이\n      const values = factories.flatMap(f => (f[key] ? String(f[key]).split(',').map((v: string) => v.trim()) : []));\n      return Array.from(new Set(values.filter(Boolean)));\n    }\n    if (key === 'items') {\n      // 품목: top_items_* + 쉼표 분리, 중복 없이\n      const arr = factories.flatMap(f => [\n        f.top_items_upper, f.top_items_lower, f.top_items_outer, f.top_items_dress_skirt, f.top_items_bag, f.top_items_fashion_accessory, f.top_items_underwear, f.top_items_sports_leisure, f.top_items_pet\n      ].filter(Boolean));\n      const commaSplit = arr.flatMap(i => String(i).split(',').map((v: string) => v.trim()));\n      return Array.from(new Set(commaSplit.filter(Boolean)));\n    }\n    if (key === 'processes') {\n      // 공정: 쉼표로 분리, 중복 없이\n      const values = factories.flatMap(f => (f.processes ? String(f.processes).split(',').map((v: string) => v.trim()) : []));\n      return Array.from(new Set(values.filter(Boolean)));\n    }\n    const values = factories.map(f => f[key]);\n    // 항상 배열 반환 보장\n    if (Array.isArray(values)) {\n      return Array.from(new Set(values.flat ? values.flat().filter(Boolean) : values.filter(Boolean)));\n    }\n    return [];\n  }\n\n  // 필터링 로직 (여러 값 중 하나라도 포함되면 통과, range/검색 포함)\n  const filtered = factories.filter(f => {\n    const itemList = [f.top_items_upper, f.top_items_lower, f.top_items_outer, f.top_items_dress_skirt, f.top_items_bag, f.top_items_fashion_accessory, f.top_items_underwear, f.top_items_sports_leisure, f.top_items_pet];\n    // 검색어 필터\n    const searchMatch = !search ||\n      (f.company_name && f.company_name.includes(search)) ||\n      (f.intro && f.intro.includes(search)) ||\n      itemList.some(i => i && i.includes(search));\n    // MOQ/월생산량 range 필터\n    const moqMatch = selected.moq.length === 0 || selected.moq.some(rangeLabel => {\n      const range = moqRanges.find(r => r.label === rangeLabel);\n      return range && f.moq >= range.min && f.moq <= range.max;\n    });\n    const monthlyCapacityMatch = selected.monthly_capacity.length === 0 || selected.monthly_capacity.some(rangeLabel => {\n      const range = monthlyCapacityRanges.find(r => r.label === rangeLabel);\n      return range && f.monthly_capacity >= range.min && f.monthly_capacity <= range.max;\n    });\n    // business_type, distribution, delivery, equipment 분리 필터\n    const businessTypeArr = f.business_type ? String(f.business_type).split(',').map((v: string) => v.trim()) : [];\n    const distributionArr = f.distribution ? String(f.distribution).split(',').map((v: string) => v.trim()) : [];\n    const deliveryArr = f.delivery ? String(f.delivery).split(',').map((v: string) => v.trim()) : [];\n    const equipmentArr = f.equipment ? String(f.equipment).split('|').map((v: string) => v.trim()) : [];\n    return (\n      searchMatch &&\n      (selected.admin_district.length === 0 || selected.admin_district.includes(f.admin_district)) &&\n      moqMatch &&\n      monthlyCapacityMatch &&\n      (selected.business_type.length === 0 || businessTypeArr.some((v: string) => selected.business_type.includes(v))) &&\n      (selected.distribution.length === 0 || distributionArr.some((v: string) => selected.distribution.includes(v))) &&\n      (selected.delivery.length === 0 || deliveryArr.some((v: string) => selected.delivery.includes(v))) &&\n      (selected.items.length === 0 || itemList.some(i => selected.items.includes(i))) &&\n      (selected.equipment.length === 0 || equipmentArr.some((v: string) => selected.equipment.includes(v))) &&\n      (selected.sewing_machines.length === 0 || selected.sewing_machines.includes(f.sewing_machines)) &&\n      (selected.pattern_machines.length === 0 || selected.pattern_machines.includes(f.pattern_machines)) &&\n      (selected.special_machines.length === 0 || selected.special_machines.includes(f.special_machines)) &&\n      (selected.factory_type.length === 0 || selected.factory_type.includes(f.factory_type)) &&\n      (selected.main_fabrics.length === 0 || selected.main_fabrics.includes(f.main_fabrics)) &&\n      (selected.processes.length === 0 || selected.processes.includes(f.processes))\n    );\n  });\n\n  // 필터 뱃지\n  const badges = Object.entries(selected).flatMap(([key, arr]) =>\n    arr.map(val => ({ key, val }))\n  );\n\n  // 아코디언 열림/닫힘 상태 관리\n  const [openFilter, setOpenFilter] = useState<{ [key: string]: boolean }>({\n    process: true,\n    region: true,\n    items: true,\n    moq: false,\n    equipment: false,\n  });\n\n  useEffect(() => {\n    async function fetchFactories() {\n      setLoading(true);\n      const { data, error } = await supabase.from(\"donggori\").select(\"*\");\n      console.log(\"공장 데이터:\", data, error);\n      setFactories(data ?? []);\n      setLoading(false);\n    }\n    fetchFactories();\n  }, []);\n\n  // 데모 이미지 배열\n  const DEMO_IMAGES = [\n    \"https://images.unsplash.com/photo-1512436991641-6745cdb1723f?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=600&q=80\",\n  ];\n\n  // 옵션 변수는 모두 const로 한 번만 선언 (함수와 변수명 겹치지 않게 *_Options로 명명)\n  const processesOptions = Array.isArray(getOptions('processes')) ? getOptions('processes') : [];\n  const regionOptions = Array.isArray(getOptions('admin_district')) ? getOptions('admin_district') : [];\n  const sewingMachineOptions = Array.isArray(getOptions('sewing_machines')) ? getOptions('sewing_machines') : [];\n  const patternMachineOptions = Array.isArray(getOptions('pattern_machines')) ? getOptions('pattern_machines') : [];\n  const specialMachineOptions = Array.isArray(getOptions('special_machines')) ? getOptions('special_machines') : [];\n  const itemOptionsAll = Array.isArray(getOptions('items')) ? getOptions('items') : [];\n\n  return (\n    <div className=\"max-w-[1200px] mx-auto py-16 flex flex-col gap-8\">\n      {loading && <div className=\"text-center py-10 text-lg\">공장 정보를 불러오는 중입니다...</div>}\n      <div className=\"flex flex-col gap-1\">\n        <h1 className=\"text-[40px] font-extrabold text-gray-900 mb-2\">봉제공장 찾기</h1>\n        <p className=\"text-lg text-gray-500 mb-8\">퀄리티 좋은 의류 제작, 지금 바로 견적을 요청해보세요.</p>\n      </div>\n      <div className=\"flex flex-row gap-8 items-start w-full\">\n        {/* 필터 패널 (좌측) */}\n        <aside className=\"w-72 shrink-0 hidden lg:block\">\n          <div className=\"bg-white rounded-xl mb-6 py-2 px-4 shadow flex flex-col gap-2\">\n            <div className=\"font-bold mb-2 flex items-center justify-between text-lg pt-4 pb-2\">\n              <span>필터</span>\n              <button\n                onClick={() => setSelected({\n                  admin_district: [], moq: [], monthly_capacity: [], business_type: [], distribution: [], delivery: [], items: [], equipment: [], sewing_machines: [], pattern_machines: [], special_machines: [], factory_type: [], main_fabrics: [], processes: []\n                })}\n                className=\"flex items-center gap-1 text-xs text-gray-500 hover:text-black px-2 py-1 rounded transition\"\n                title=\"필터 초기화\"\n              >\n                <ArrowPathIcon className=\"w-5 h-5\" />\n              </button>\n            </div>\n            <hr className=\"my-2 border-gray-200\" />\n            {/* 공정 */}\n            <div>\n              <button className=\"w-full flex items-center justify-between py-2\" onClick={() => setOpenFilter(f => ({ ...f, process: !f.process }))}>\n                <span className=\"font-bold text-[16px]\">공정</span>\n                <ChevronDownIcon className={`w-5 h-5 transition-transform ${openFilter.process ? '' : 'rotate-180'}`} />\n              </button>\n              {openFilter.process && (\n                <div className=\"flex flex-wrap gap-2 pb-2\">\n                  {processesOptions.map((opt: string) => (\n                    <Button\n                      key={opt}\n                      size=\"sm\"\n                      variant={selected.processes?.includes?.(opt) ? \"default\" : \"outline\"}\n                      className=\"rounded-full border px-4\"\n                      onClick={() => setSelected(sel => ({\n                        ...sel,\n                        processes: sel.processes?.includes?.(opt)\n                          ? sel.processes.filter((v: string) => v !== opt)\n                          : [...(sel.processes || []), opt]\n                      }))}\n                    >\n                      {opt}\n                    </Button>\n                  ))}\n                </div>\n              )}\n            </div>\n            {/* 지역 */}\n            <div>\n              <button className=\"w-full flex items-center justify-between py-2\" onClick={() => setOpenFilter(f => ({ ...f, region: !f.region }))}>\n                <span className=\"font-bold text-[16px]\">지역</span>\n                <ChevronDownIcon className={`w-5 h-5 transition-transform ${openFilter.region ? '' : 'rotate-180'}`} />\n              </button>\n              {openFilter.region && (\n                <div className=\"flex flex-wrap gap-2 pb-2\">\n                  {regionOptions.map((opt: string) => (\n                    <Button\n                      key={opt}\n                      size=\"sm\"\n                      variant={selected.admin_district.includes(opt) ? \"default\" : \"outline\"}\n                      className=\"rounded-full border px-4\"\n                      onClick={() => setSelected(sel => ({\n                        ...sel,\n                        admin_district: sel.admin_district.includes(opt)\n                          ? sel.admin_district.filter((v: string) => v !== opt)\n                          : [...sel.admin_district, opt]\n                      }))}\n                    >\n                      {opt}\n                    </Button>\n                  ))}\n                </div>\n              )}\n            </div>\n            {/* MOQ(최소수량) */}\n            <div>\n              <button className=\"w-full flex items-center justify-between py-2\" onClick={() => setOpenFilter(f => ({ ...f, moq: !f.moq }))}>\n                <span className=\"font-bold text-[16px]\">MOQ(최소수량)</span>\n                <ChevronDownIcon className={`w-5 h-5 transition-transform ${openFilter.moq ? '' : 'rotate-180'}`} />\n              </button>\n              {openFilter.moq && (\n                <div className=\"flex flex-wrap gap-2 pb-2\">\n                  {moqRanges.map(opt => (\n                    <Button\n                      key={opt.label}\n                      size=\"sm\"\n                      variant={selected.moq.includes(opt.label) ? \"default\" : \"outline\"}\n                      className=\"rounded-full border px-4\"\n                      onClick={() => setSelected(sel => ({\n                        ...sel,\n                        moq: sel.moq.includes(opt.label)\n                          ? sel.moq.filter((v: string) => v !== opt.label)\n                          : [...sel.moq, opt.label]\n                      }))}\n                    >\n                      {opt.label}\n                    </Button>\n                  ))}\n                </div>\n              )}\n            </div>\n            {/* 재봉기 */}\n            <div>\n              <button className=\"w-full flex items-center justify-between py-2\" onClick={() => setOpenFilter(f => ({ ...f, sewing_machines: !f.sewing_machines }))}>\n                <span className=\"font-bold text-[16px]\">재봉기</span>\n                <ChevronDownIcon className={`w-5 h-5 transition-transform ${openFilter.sewing_machines ? '' : 'rotate-180'}`} />\n              </button>\n              {openFilter.sewing_machines && (\n                <div className=\"flex flex-wrap gap-2 pb-2\">\n                  {sewingMachineOptions.map((opt: string) => (\n                    <Button\n                      key={opt}\n                      size=\"sm\"\n                      variant={selected.sewing_machines.includes(opt) ? \"default\" : \"outline\"}\n                      className=\"rounded-full border px-4\"\n                      onClick={() => setSelected(sel => ({\n                        ...sel,\n                        sewing_machines: sel.sewing_machines.includes(opt)\n                          ? sel.sewing_machines.filter((v: string) => v !== opt)\n                          : [...sel.sewing_machines, opt]\n                      }))}\n                    >\n                      {opt}\n                    </Button>\n                  ))}\n                </div>\n              )}\n            </div>\n            {/* 패턴기 */}\n            <div>\n              <button className=\"w-full flex items-center justify-between py-2\" onClick={() => setOpenFilter(f => ({ ...f, pattern_machines: !f.pattern_machines }))}>\n                <span className=\"font-bold text-[16px]\">패턴기</span>\n                <ChevronDownIcon className={`w-5 h-5 transition-transform ${openFilter.pattern_machines ? '' : 'rotate-180'}`} />\n              </button>\n              {openFilter.pattern_machines && (\n                <div className=\"flex flex-wrap gap-2 pb-2\">\n                  {patternMachineOptions.map((opt: string) => (\n                    <Button\n                      key={opt}\n                      size=\"sm\"\n                      variant={selected.pattern_machines.includes(opt) ? \"default\" : \"outline\"}\n                      className=\"rounded-full border px-4\"\n                      onClick={() => setSelected(sel => ({\n                        ...sel,\n                        pattern_machines: sel.pattern_machines.includes(opt)\n                          ? sel.pattern_machines.filter((v: string) => v !== opt)\n                          : [...sel.pattern_machines, opt]\n                      }))}\n                    >\n                      {opt}\n                    </Button>\n                  ))}\n                </div>\n              )}\n            </div>\n            {/* 특수기 */}\n            <div>\n              <button className=\"w-full flex items-center justify-between py-2\" onClick={() => setOpenFilter(f => ({ ...f, special_machines: !f.special_machines }))}>\n                <span className=\"font-bold text-[16px]\">특수기</span>\n                <ChevronDownIcon className={`w-5 h-5 transition-transform ${openFilter.special_machines ? '' : 'rotate-180'}`} />\n              </button>\n              {openFilter.special_machines && (\n                <div className=\"flex flex-wrap gap-2 pb-2\">\n                  {specialMachineOptions.map((opt: string) => (\n                    <Button\n                      key={opt}\n                      size=\"sm\"\n                      variant={selected.special_machines.includes(opt) ? \"default\" : \"outline\"}\n                      className=\"rounded-full border px-4\"\n                      onClick={() => setSelected(sel => ({\n                        ...sel,\n                        special_machines: sel.special_machines.includes(opt)\n                          ? sel.special_machines.filter((v: string) => v !== opt)\n                          : [...sel.special_machines, opt]\n                      }))}\n                    >\n                      {opt}\n                    </Button>\n                  ))}\n                </div>\n              )}\n            </div>\n            {/* 품목 */}\n            <div>\n              <button className=\"w-full flex items-center justify-between py-2\" onClick={() => setOpenFilter(f => ({ ...f, items: !f.items }))}>\n                <span className=\"font-bold text-[16px]\">품목</span>\n                <ChevronDownIcon className={`w-5 h-5 transition-transform ${openFilter.items ? '' : 'rotate-180'}`} />\n              </button>\n              {openFilter.items && (\n                <div className=\"flex flex-wrap gap-2 pb-2\">\n                  {itemOptionsAll.map((opt: string) => (\n                    <Button\n                      key={opt}\n                      size=\"sm\"\n                      variant={selected.items.includes(opt) ? \"default\" : \"outline\"}\n                      className=\"rounded-full border px-4\"\n                      onClick={() => setSelected(sel => ({\n                        ...sel,\n                        items: sel.items.includes(opt)\n                          ? sel.items.filter((v: string) => v !== opt)\n                          : [...sel.items, opt]\n                      }))}\n                    >\n                      {opt}\n                    </Button>\n                  ))}\n                </div>\n              )}\n            </div>\n            {/* 주요 품목 */}\n            <div>\n              <button className=\"w-full flex items-center justify-between py-2\" onClick={() => setOpenFilter(f => ({ ...f, main_fabrics: !f.main_fabrics }))}>\n                <span className=\"font-bold text-[16px]\">주요 품목</span>\n                <ChevronDownIcon className={`w-5 h-5 transition-transform ${openFilter.main_fabrics ? '' : 'rotate-180'}`} />\n              </button>\n              {openFilter.main_fabrics && (\n                <div className=\"flex flex-wrap gap-2 pb-2\">\n                  {/* 데이터가 없으므로 버튼 없음 */}\n                </div>\n              )}\n            </div>\n          </div>\n        </aside>\n        {/* 오른쪽: 검색+카드/지도 컨테이너 */}\n        <div className=\"flex-1 min-w-0 flex flex-col items-stretch\">\n          {/* 검색 인풋 + 목록/지도 버튼 */}\n          <div className=\"flex gap-2 mb-4 items-center self-start w-full\">\n            <input\n              value={search}\n              onChange={e => setSearch(e.target.value)}\n              placeholder=\"공장명, 키워드로 검색하세요.\"\n              className=\"flex-1 w-full border rounded-[0.625rem] px-4 py-2 focus:border-black focus:outline-none\"\n            />\n            <div className=\"flex bg-gray-100 rounded-lg p-1\">\n              <button\n                className={`px-4 py-1 rounded-lg transition flex items-center gap-2 ${view === 'list' ? 'bg-white text-[#333] font-semibold shadow' : 'bg-transparent text-[#555] font-normal'}`}\n                onClick={() => setView('list')}\n              >\n                <List className=\"w-4 h-4\" /> 목록\n              </button>\n              <button\n                className={`px-4 py-1 rounded-lg transition flex items-center gap-2 ${view === 'map' ? 'bg-white text-[#333] font-semibold shadow' : 'bg-transparent text-[#555] font-normal'}`}\n                onClick={() => setView('map')}\n              >\n                <MapIcon className=\"w-4 h-4\" /> 지도\n              </button>\n            </div>\n          </div>\n          {/* 선택된 필터 뱃지 (오른쪽 컨테이너 내) */}\n          {badges.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mb-4\">\n              {badges.map((b, i) => (\n                <span key={b.key + b.val} className=\"bg-black text-white rounded-full px-3 py-1 text-[14px] font-semibold flex items-center gap-1\">\n                  {b.val}\n                  <button onClick={() => setSelected(sel => ({\n                    ...sel,\n                    [b.key]: sel[b.key as keyof typeof sel].filter((v: string) => v !== b.val)\n                  }))} className=\"ml-1\">×</button>\n                </span>\n              ))}\n              <Button size=\"sm\" variant=\"ghost\" onClick={() => setSelected({\n                admin_district: [], moq: [], monthly_capacity: [], business_type: [], distribution: [], delivery: [], items: [], equipment: [], sewing_machines: [], pattern_machines: [], special_machines: [], factory_type: [], main_fabrics: [], processes: []\n              })}>전체 해제</Button>\n            </div>\n          )}\n          {/* 카드 리스트/지도 뷰 */}\n          <div className=\"flex-1 min-w-0\">\n            {view === 'list' ? (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n                {Array.isArray(filtered) && filtered.length > 0 ? (\n                  filtered.map((f: Factory, idx: number) => (\n                    f ? (\n                      <div key={f.id ?? idx} className=\"border rounded-xl p-0 bg-white shadow overflow-hidden flex flex-col\">\n                        {/* 이미지 영역 */}\n                        <div className=\"w-full h-40 bg-gray-100 flex items-center justify-center overflow-hidden\">\n                          <img\n                            src={f.image || DEMO_IMAGES[idx % DEMO_IMAGES.length]}\n                            alt={f.company_name ?? '공장 이미지'}\n                            className=\"object-cover w-full h-full\"\n                          />\n                        </div>\n                        {/* 정보 영역 */}\n                        <div className=\"p-4 flex-1 flex flex-col\">\n                          {/* 태그 영역 */}\n                          <div className=\"flex gap-2 mb-2 flex-wrap\">\n                            {Array.isArray(f.processes) && f.processes.map((tag: string) => (\n                              <span key={tag} className={`rounded px-2 py-1 text-xs font-bold ${getTagColor(tag)}`}>{tag}</span>\n                            ))}\n                          </div>\n                          <div className=\"font-bold text-base mb-1\">{f.company_name ?? '이름 없음'}</div>\n                          <div className=\"text-xs text-gray-500 mb-1 line-clamp-2\">{f.intro ?? '설명 없음'}</div>\n                          <div className=\"text-xs text-gray-500 mb-1\">지역: {f.admin_district ?? '-'}</div>\n                          <div className=\"text-xs text-gray-500 mb-1\">연락처: {f.phone_number ?? '-'}</div>\n                          <div className=\"text-xs text-gray-500 mb-1\">MOQ(최소 주문 수량): {f.moq ?? '-'}</div>\n                          {/* 카드 정보 영역에서 주요 품목(main_fabrics) 표기 라인 제거 */}\n                          <div className=\"text-xs text-gray-400\">위치: 위도 {f.lat ?? '-'}, 경도 {f.lng ?? '-'}</div>\n                        </div>\n                      </div>\n                    ) : null\n                  ))\n                ) : (\n                  <div className=\"text-center py-20 text-gray-400 text-lg col-span-3\">공장 데이터가 없습니다.</div>\n                )}\n              </div>\n            ) : (\n              <div className=\"w-full h-[600px] bg-gray-100 rounded-xl flex items-center justify-center\">\n                <span className=\"text-gray-400\">지도 뷰 준비중</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n// 주니어 개발자 설명:\n// - getTagColor 함수로 태그별 색상을 쉽게 관리할 수 있습니다.\n// - 필터 아코디언은 useState로 열림/닫힘 상태를 관리하며, 버튼 클릭 시 토글됩니다.\n// - 카드 내 태그는 map으로 렌더링하며, 공정/나염/자수 등은 색상, 주요 품목은 회색으로 구분합니다.\n// - Tailwind CSS로 스타일을 빠르게 적용할 수 있습니다. "],"names":[],"mappings":"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","debugId":null}}]
}