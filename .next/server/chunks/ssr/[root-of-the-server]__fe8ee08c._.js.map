{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-[#333333] text-white shadow-xs hover:bg-[#333333]/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n \nexport const supabase = createClient(supabaseUrl, supabaseAnonKey); "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/app/matching/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { supabase } from \"@/lib/supabaseClient\";\nimport { useRouter } from \"next/navigation\";\nimport type { Factory } from \"@/lib/factories\";\n\n// factories 데이터에서 옵션 추출 유틸(공장 찾기에서 복사)\nconst moqRanges = [\n  { label: \"0-50\", min: 0, max: 50 },\n  { label: \"51-100\", min: 51, max: 100 },\n  { label: \"101-300\", min: 101, max: 300 },\n  { label: \"301+\", min: 301, max: Infinity },\n];\n\n// 채팅 말풍선 컴포넌트 (fade-in + 타이핑 효과)\nfunction ChatBubble({ text, type, isTyping, showCursor, onEdit }: { text: string; type: \"question\" | \"answer\"; isTyping?: boolean; showCursor?: boolean; onEdit?: () => void }) {\n  return (\n    <div className={`flex flex-col items-${type === \"answer\" ? \"end\" : \"start\"} w-full`}>\n      <div className={`relative px-4 py-2 rounded-2xl text-base animate-fade-in max-w-[80%] ${type === \"question\" ? \"bg-white text-black self-start\" : \"bg-[#222222] text-white self-end\"}`} style={{ minHeight: 40 }}>\n        {isTyping ? (\n          <span>\n            {text}\n            {showCursor && <span className=\"inline-block w-2 animate-blink ml-0.5\">|</span>}\n          </span>\n        ) : (\n          text\n        )}\n      </div>\n      {/* 답변(선택지) 말풍선에만 수정 버튼 노출 */}\n      {type === \"answer\" && onEdit && (\n        <button\n          className=\"mt-1 text-xs text-gray-400 underline hover:text-[#222222]\"\n          onClick={onEdit}\n        >\n          수정\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default function MatchingPage() {\n  // 공장 데이터 state\n  const [factories, setFactories] = useState<Factory[]>([]);\n\n  useEffect(() => {\n    async function fetchFactories() {\n      const { data } = await supabase.from(\"donggori\").select(\"*\");\n      setFactories(data ?? []);\n    }\n    fetchFactories();\n  }, []);\n\n  // factories state 기반 옵션 추출 함수 (함수 내부에서 선언)\n  function getOptions(key: string): string[] {\n    if (key === 'admin_district') {\n      return Array.from(new Set(factories.map((f: Factory) => f.admin_district).filter((v: string | undefined): v is string => typeof v === 'string' && Boolean(v))));\n    }\n    if (key === 'processes') {\n      return Array.from(new Set(factories.flatMap((f: Factory) => f.processes ? String(f.processes).split(',').map((v: string) => v.trim()) : []).filter((v: string) => typeof v === 'string' && Boolean(v))));\n    }\n    if (key === 'sewing_machines' || key === 'pattern_machines' || key === 'special_machines') {\n      return Array.from(new Set(factories.flatMap((f: Factory) => f[key] ? String(f[key]).split(',').map((v: string) => v.trim()) : []).filter((v: string) => typeof v === 'string' && Boolean(v))));\n    }\n    if (key === 'items') {\n      const arr = factories.flatMap((f: Factory) => [\n        f.top_items_upper, f.top_items_lower, f.top_items_outer, f.top_items_dress_skirt, f.top_items_bag, f.top_items_fashion_accessory, f.top_items_underwear, f.top_items_sports_leisure, f.top_items_pet\n      ].filter((v: string | undefined): v is string => typeof v === 'string' && Boolean(v)));\n      return Array.from(new Set(arr.flatMap((i: string) => String(i).split(',').map((v: string) => v.trim())).filter((v: string) => typeof v === 'string' && Boolean(v))));\n    }\n    return [];\n  }\n\ntype ScoredFactory = Factory & { score: number };\n\n  // 동적 질문/옵션 useMemo는 반드시 함수 내부에서 호출\n  const QUESTIONS = useMemo(() => [\n    { question: \"어떤 공정을 원하시나요?\", key: \"processes\", options: getOptions(\"processes\") },\n    { question: \"지역을 선택하세요\", key: \"admin_district\", options: getOptions(\"admin_district\") },\n    { question: \"MOQ(최소 주문 수량)을 선택하세요\", key: \"moq\", options: moqRanges.map(r => r.label) },\n    { question: \"재봉기를 선택하세요\", key: \"sewing_machines\", options: getOptions(\"sewing_machines\") },\n    { question: \"패턴기를 선택하세요\", key: \"pattern_machines\", options: getOptions(\"pattern_machines\") },\n    { question: \"특수기를 선택하세요\", key: \"special_machines\", options: getOptions(\"special_machines\") },\n    { question: \"어떤 품목을 원하시나요?\", key: \"items\", options: getOptions(\"items\") },\n  ], [factories]);\n  // 채팅 메시지(질문/답변 순서대로)\n  const [chat, setChat] = useState<{ type: \"question\" | \"answer\"; text: string }[]>([]);\n  const [introDone, setIntroDone] = useState(false);\n\n  // 인트로 타이핑 상태 추가\n  const [typingText, setTypingText] = useState(\"\"); // 현재 타이핑 중인 텍스트\n  // introMessages를 useMemo로 관리\n  const introMessages = useMemo(() => [\n    \"반갑습니다:)\",\n    \"동고리가 봉제공장을 추천해드릴게요!\",\n    QUESTIONS[0]?.question || \"어떤 공정을 원하시나요?\",\n  ], [QUESTIONS[0]?.question]);\n  const [introStep, setIntroStep] = useState(0); // 0: 타이핑, 1: ... 표시, 2: 다음 메시지\n  const typingTimer = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    // 인트로 타이핑 효과\n    setChat([]);\n    setIntroDone(false);\n    setTypingText(\"\");\n    setIntroStep(0);\n    const timers: NodeJS.Timeout[] = [];\n    let currentMsgIdx = 0;\n    let currentCharIdx = 0;\n    function typeNextChar() {\n      const msg = introMessages[currentMsgIdx];\n      if (currentCharIdx < msg.length) {\n        setTypingText(msg.slice(0, currentCharIdx + 1));\n        currentCharIdx++;\n        typingTimer.current = setTimeout(typeNextChar, 40); // 타이핑 속도\n      } else {\n        // 타이핑 끝나면 바로 메시지 추가 및 다음 메시지로 이동\n        setChat(prev => [...prev, { type: \"question\", text: msg }]);\n        setTypingText(\"\");\n        setIntroStep(2);\n        if (currentMsgIdx < introMessages.length - 1) {\n          currentMsgIdx++;\n          currentCharIdx = 0;\n          setTimeout(() => {\n            setIntroStep(0);\n            typeNextChar();\n          }, 200); // 바로 다음 메시지 타이핑 시작, 약간의 텀만 둠\n        } else {\n          // 인트로 끝: setTimeout 없이 바로 introDone 처리\n          setIntroDone(true);\n        }\n      }\n    }\n    // 첫 메시지 타이핑 시작\n    typeNextChar();\n    return () => {\n      timers.forEach(clearTimeout);\n      if (typingTimer.current) clearTimeout(typingTimer.current);\n    };\n  }, [introMessages]);\n  // 현재 질문 인덱스\n  const [step, setStep] = useState(0);\n  // 사용자가 선택한 답변들\n  const [answers, setAnswers] = useState<string[][]>([]);\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  // user 변수 제거 (사용하지 않음)\n  const router = useRouter();\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [recommended, setRecommended] = useState<ScoredFactory[]>([]);\n  // 추천 결과 로딩 상태 추가\n  const [resultLoading, setResultLoading] = useState(false);\n  // 채팅 스크롤 ref\n  const chatScrollRef = useRef<HTMLDivElement>(null);\n\n  // 데모 이미지 배열(공장 찾기와 동일)\n  const DEMO_IMAGES = [\n    \"https://images.unsplash.com/photo-1512436991641-6745cdb1723f?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=600&q=80\",\n  ];\n  // 카드별 칩(공장 id 기준) - 공장 찾기와 동일하게 고정\n  const cardFabricsById = useMemo(() => {\n    const fabricChips = [\n      { label: '봉제', color: '#0ACF83', bg: 'rgba(10, 207, 131, 0.1)' },\n      { label: '샘플', color: '#08B7FF', bg: 'rgba(8, 183, 255, 0.1)' },\n      { label: '패턴', color: '#FF8308', bg: 'rgba(255, 131, 8, 0.1)' },\n      { label: '나염', color: '#A259FF', bg: 'rgba(162, 89, 255, 0.1)' },\n      { label: '전사', color: '#ED6262', bg: 'rgba(237, 98, 98, 0.1)' },\n    ];\n    return Object.fromEntries(\n      recommended.map((f, idx) => {\n        const seed = String(f.id ?? idx);\n        let hash = 0;\n        for (let i = 0; i < seed.length; i++) hash = ((hash << 5) - hash) + seed.charCodeAt(i);\n        const shuffled = [...fabricChips].sort((a, b) => {\n          const h1 = Math.abs(Math.sin(hash + a.label.length)) % 1;\n          const h2 = Math.abs(Math.sin(hash + b.label.length)) % 1;\n          return h1 - h2;\n        });\n        const count = (Math.abs(hash) % 2) + 1;\n        return [f.id ?? idx, shuffled.slice(0, count)];\n      })\n    );\n  }, [recommended]);\n\n  // 선택지 클릭 시\n  const handleOptionToggle = (option: string) => {\n    setSelectedOptions(prev =>\n      prev.includes(option)\n        ? prev.filter(o => o !== option)\n        : [...prev, option]\n    );\n  };\n\n  // 1. showResult, loading 등 결과 오버레이/전체화면 관련 상태/코드 제거\n  // 2. handleConfirm, handleSkip에서 setShowResult, setLoading 등 제거, 대신 answers가 7개(마지막)까지 쌓이면 결과 상태로 전환\n  // 3. 왼쪽: 7개 답변이 모두 끝나면 질문/선택지 대신 추천 3개 카드만 표시\n  // 4. 오른쪽: 기존 채팅 UI 아래에 결과 안내 메시지(답변 말풍선) 추가\n\n  // handleConfirm 내부\n  const handleConfirm = () => {\n    if (selectedOptions.length === 0) return;\n    const newAnswers = [...answers, selectedOptions];\n    setAnswers(newAnswers);\n    setChat(prev => [\n      ...prev,\n      { type: \"answer\", text: selectedOptions.join(\", \") },\n    ]);\n    setSelectedOptions([]);\n    // 다음 질문이 있으면 추가\n    if (step + 1 < QUESTIONS.length) {\n      setTimeout(() => {\n        setChat(prev => [\n          ...prev,\n          { type: \"question\", text: QUESTIONS[step + 1].question },\n        ]);\n        setStep(prev => prev + 1);\n      }, 400);\n    } else {\n      // 7개 완료 시 추천 결과만 상태에 저장\n      const rec = getRecommendedFactories(newAnswers.map(a => a.join(\", \")));\n      setRecommended(rec);\n      // step, answers 등은 그대로 두고, showResult/로딩 등은 사용하지 않음\n    }\n  };\n  // handleSkip도 동일하게 showResult/로딩 제거\n  const handleSkip = () => {\n    const newAnswers = [...answers, []];\n    setAnswers(newAnswers);\n    setChat(prev => [\n      ...prev,\n      { type: \"answer\", text: \"(건너뜀)\" },\n    ]);\n    setSelectedOptions([]);\n    if (step + 1 < QUESTIONS.length) {\n      setTimeout(() => {\n        setChat(prev => [\n          ...prev,\n          { type: \"question\", text: QUESTIONS[step + 1].question },\n        ]);\n        setStep(prev => prev + 1);\n      }, 400);\n    } else {\n      const rec = getRecommendedFactories(newAnswers.map(a => a.join(\", \")));\n      setRecommended(rec);\n    }\n  };\n\n  // 추천 알고리즘: 답변과 공장 데이터 매칭 점수 계산\n  function getRecommendedFactories(answers: string[]) {\n    // 선택한 옵션 중 1개라도 일치하는 공장만 후보로 삼고, 그 중 최대 3개만(랜덤 또는 상위 3개) 노출\n    // 일치하는 공장이 3개 미만이면 나머지는 랜덤으로 채움\n    const matched = factories.filter(f => {\n      // 공정\n      if (answers[0] && Array.isArray(f.processes) && f.processes.some(p => answers[0].includes(p))) return true;\n      // 지역\n      if (answers[1] && typeof f.admin_district === 'string' && answers[1].includes(f.admin_district)) return true;\n      // MOQ(수량)\n      if (answers[2]) {\n        if (\n          (answers[2] === \"0-50\" && f.minOrder <= 50) ||\n          (answers[2] === \"51-100\" && f.minOrder <= 100) ||\n          (answers[2] === \"101-300\" && f.minOrder <= 300) ||\n          (answers[2] === \"301+\" && f.minOrder > 300)\n        ) return true;\n      }\n      // 재봉기/패턴기/특수기\n      if (answers[3] && typeof f.sewing_machines === 'string' && answers[3].split(',').some(val => typeof f.sewing_machines === 'string' && f.sewing_machines.includes(val))) return true;\n      if (answers[4] && typeof f.pattern_machines === 'string' && answers[4].split(',').some(val => typeof f.pattern_machines === 'string' && f.pattern_machines.includes(val))) return true;\n      if (answers[5] && typeof f.special_machines === 'string' && answers[5].split(',').some(val => typeof f.special_machines === 'string' && f.special_machines.includes(val))) return true;\n      // 품목\n      if (answers[6] && Array.isArray(f.items) && f.items.some(i => answers[6].includes(i))) return true;\n      return false;\n    });\n    // 3개 미만이면 랜덤으로 채움\n    const result = matched.slice(0, 3).map(f => ({ ...f, score: 1 }));\n    if (result.length < 3) {\n      const others = factories.filter(f => !matched.includes(f));\n      while (result.length < 3 && others.length > 0) {\n        const idx = Math.floor(Math.random() * others.length);\n        result.push({ ...others.splice(idx, 1)[0], score: 1 });\n      }\n    }\n    return result;\n  }\n\n  // 추천 결과 카드 UI (공장 정보 상세)\n  function renderResultCards() {\n    return (\n      <div className=\"w-full flex flex-col items-center justify-center min-h-[500px] animate-fade-in\">\n        <div className=\"text-2xl font-bold mb-6\">가장 적합한 봉제공장 3곳을 추천드려요!</div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8 w-full max-w-3xl\">\n          {recommended.map((f, idx) => {\n            const displayName = typeof f.name === 'string' && f.name\n              ? f.name\n              : typeof f.company_name === 'string' && f.company_name\n                ? f.company_name\n                : '이름 없음';\n            const mainItems = [f.top_items_upper, f.top_items_lower, f.top_items_outer, f.top_items_dress_skirt]\n              .filter((v) => typeof v === 'string' && v.length > 0)\n              .join(', ') || '-';\n            const randomFabrics = cardFabricsById[f.id ?? idx] || [];\n            return (\n              <div key={f.id ?? idx} className=\"rounded-xl bg-white overflow-hidden flex flex-col border border-gray-200\">\n                {/* 이미지 영역 */}\n                <div className=\"w-full h-40 bg-gray-100 flex items-center justify-center overflow-hidden rounded-xl\">\n                  <img\n                    src={f.image || DEMO_IMAGES[idx % DEMO_IMAGES.length]}\n                    alt={typeof f.company_name === 'string' ? f.company_name : '공장 이미지'}\n                    className=\"object-cover w-full h-full rounded-xl\"\n                  />\n                </div>\n                {/* 이미지와 텍스트 사이 gap */}\n                <div className=\"mt-4\" />\n                {/* 정보 영역 (패딩 적용) */}\n                <div className=\"flex-1 flex flex-col p-6\">\n                  {/* 주요 원단 칩 */}\n                  <div className=\"flex flex-wrap gap-2 mb-2\">\n                    {randomFabrics.map((chip) => (\n                      <span key={chip.label} style={{ color: chip.color, background: chip.bg }} className=\"rounded-full px-3 py-1 text-xs font-semibold\">\n                        {chip.label}\n                      </span>\n                    ))}\n                  </div>\n                  <div className=\"font-bold text-base mb-1\">{displayName}</div>\n                  {/* 주요 품목 */}\n                  <div className=\"text-sm font-bold mt-2 mb-1 flex items-center\" style={{ color: '#333333', opacity: 0.6 }}>\n                    <span className=\"shrink-0\">주요품목</span>\n                    <span className=\"font-normal ml-2 flex-1 truncate\">{mainItems}</span>\n                  </div>\n                  <div className=\"text-sm font-bold\" style={{ color: '#333333', opacity: 0.6 }}>\n                    MOQ(최소 주문 수량) <span className=\"font-normal\">{typeof f.moq === 'number' ? f.moq : (typeof f.moq === 'string' && !isNaN(Number(f.moq)) ? Number(f.moq) : (typeof f.minOrder === 'number' ? f.minOrder : '-'))}</span>\n                  </div>\n                  <button\n                    className=\"w-full mt-4 bg-[#333333] text-white rounded-lg py-2 font-semibold hover:bg-[#222] transition\"\n                    onClick={() => router.push(`/factories/${f.id}`)}\n                  >\n                    의뢰하기\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  // 로딩 스피너 UI\n  function renderLoading() {\n    return (\n      <div className=\"w-full flex flex-col items-center justify-center min-h-[500px] animate-fade-in\">\n        <div className=\"w-16 h-16 border-4 border-gray-300 border-t-[#222222] rounded-full animate-spin mb-6\"></div>\n        <div className=\"text-lg font-semibold\">추천 결과를 분석 중입니다...</div>\n      </div>\n    );\n  }\n\n  // 이전 단계로 돌아가기 (수정)\n  const handleEdit = (editStep: number) => {\n    setLoading(false);\n    setStep(editStep);\n    setSelectedOptions(answers[editStep] || []);\n    setAnswers(answers.slice(0, editStep));\n    setChat(chat.slice(0, 1 + editStep * 2)); // 질문/답변 쌍이므로\n  };\n\n  // 추천 결과(매칭 완료) 시 왼쪽 하단에 '직접 찾기'와 '다시하기' 버튼을 추가합니다. '직접 찾기'는 /factories로 이동, '다시하기'는 매칭 상태(answers, step, chat 등) 초기화. 버튼은 Figma 예시처럼 스타일링(직접 찾기: 흰색, 다시하기: 검정 배경, 아이콘 포함)합니다.\n  const handleRestart = () => {\n    setLoading(false);\n    setStep(0);\n    setAnswers([]);\n    setSelectedOptions([]);\n    setChat([]);\n    setIntroDone(false);\n    setRecommended([]); // 결과 초기화\n  };\n\n  // 답변이 모두 끝나면 분석 로딩 후 결과 노출\n  useEffect(() => {\n    if (answers.length === QUESTIONS.length) {\n      setResultLoading(true);\n      const timer = setTimeout(() => {\n        const rec = getRecommendedFactories(answers.map(a => a.join(\", \")));\n        setRecommended(rec);\n        setResultLoading(false);\n      }, 2200); // 2.2초 분석 로딩\n      return () => clearTimeout(timer);\n    } else {\n      setResultLoading(false);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [answers.length]);\n\n  // 채팅 자동 스크롤 useEffect\n  useEffect(() => {\n    if (chatScrollRef.current) {\n      chatScrollRef.current.scrollTop = chatScrollRef.current.scrollHeight;\n    }\n  }, [chat, recommended, resultLoading]);\n\n  // --- [추가: 결과 안내 메시지 상태] ---\n  const [showResultMsg1, setShowResultMsg1] = useState(false);\n  const [showResultMsg2, setShowResultMsg2] = useState(false);\n\n  // --- [결과 안내 메시지 타이밍 제어 useEffect 수정] ---\n  useEffect(() => {\n    if (\n      answers.length === QUESTIONS.length &&\n      recommended.length > 0 &&\n      !resultLoading\n    ) {\n      setShowResultMsg1(false);\n      setShowResultMsg2(false);\n      const t1 = setTimeout(() => setShowResultMsg1(true), 500); // 0.5초 후 첫 메시지\n      const t2 = setTimeout(() => setShowResultMsg2(true), 1500); // 1.5초 후 두 번째 메시지\n      return () => {\n        clearTimeout(t1);\n        clearTimeout(t2);\n      };\n    } else {\n      setShowResultMsg1(false);\n      setShowResultMsg2(false);\n    }\n  }, [answers.length, recommended, resultLoading]);\n\n  // 결과 안내 메시지 등장 시 채팅창 자동 스크롤\n  useEffect(() => {\n    if ((showResultMsg1 || showResultMsg2) && chatScrollRef.current) {\n      chatScrollRef.current.scrollTop = chatScrollRef.current.scrollHeight;\n    }\n  }, [showResultMsg1, showResultMsg2]);\n\n  // 왼쪽: 질문/선택지 or 결과 카드 or 로딩\n  return (\n    <div className=\"w-full min-h-screen bg-[#F4F5F7] flex flex-col items-center justify-start overflow-x-hidden py-16 px-6\">\n      <div className=\"w-full max-w-[1400px] mx-auto flex flex-row gap-4 items-start justify-center flex-1 transition-opacity duration-700 px-1 overflow-hidden bg-[#F4F5F7] pb-0 mb-0\" style={{ minHeight: '84vh' }}>\n        {/* 왼쪽: 질문/선택지 or 결과 카드 or 로딩 */}\n        <div className=\"flex-[2] bg-white rounded-2xl shadow border p-6 flex flex-col h-[100vh] max-h-[80vh]\">\n          {answers.length === QUESTIONS.length ? (\n            resultLoading ? (\n              <div className=\"flex flex-1 flex-col items-center justify-center min-h-[400px] animate-fade-in\">\n                <div className=\"w-16 h-16 border-4 border-gray-300 border-t-[#222222] rounded-full animate-spin mb-6\"></div>\n                <div className=\"text-lg font-semibold\">추천 결과를 분석 중입니다...</div>\n              </div>\n            ) : (\n              <div className=\"flex flex-col flex-1 justify-between h-full\">\n                <div className=\"flex-1 flex flex-col items-center justify-center\">\n                  {renderResultCards()}\n                </div>\n                {/* 하단 버튼 영역 */}\n                <div className=\"flex w-full gap-4 pt-4\">\n                  <button\n                    className=\"flex-1 flex items-center justify-center border border-gray-300 rounded-lg py-3 text-base font-semibold bg-white hover:bg-gray-50 transition\"\n                    onClick={() => router.push('/factories')}\n                  >\n                    <span className=\"mr-2\">🔍</span>직접 찾기\n                  </button>\n                  <button\n                    className=\"flex-1 flex items-center justify-center rounded-lg py-3 text-base font-semibold bg-[#222] text-white hover:bg-[#111] transition\"\n                    onClick={handleRestart}\n                  >\n                    <span className=\"mr-2\">↻</span>다시하기\n                  </button>\n                </div>\n              </div>\n            )\n          ) : !introDone ? (\n            // 인트로 타이핑 중에는 아무것도 안 보이게(또는 로딩/스켈레톤 등)\n            <div className=\"flex-1 flex items-center justify-center text-gray-400 text-lg\">...</div>\n          ) : (\n            // 기존 질문/선택지 UI\n            <>\n              {/* 상단~선택지 영역 */}\n              <div className=\"flex-1 min-h-0 flex flex-col gap-4\">\n                <div className=\"text-base text-gray-500 mb-4\">\n                  몇 가지 정보를 알려주시면,<br />\n                  <span className=\"font-bold\">가장 적합한 3개의 봉제공장을 추천</span>해드립니다.\n                </div>\n                <hr className=\"my-4 border-gray-200\" />\n                <div className=\"flex gap-2 mb-6\">\n                  {QUESTIONS.map((_, idx) => (\n                    <div key={idx} className={`h-1 w-12 rounded-full ${idx <= step ? \"bg-[#333333]\" : \"bg-gray-200\"}`}></div>\n                  ))}\n                </div>\n                <div className=\"text-sm text-gray-400 mb-2\">{step + 1} of {QUESTIONS.length}</div>\n                <div className=\"text-xl font-bold mb-6\">{QUESTIONS[step].question}</div>\n                {/* 선택지 영역 */}\n                <div className={QUESTIONS[step].key === 'items' ? 'bg-gray-50 rounded-xl p-6 grid grid-cols-3 gap-6 overflow-y-auto flex-1' : 'bg-gray-50 rounded-xl p-6 grid grid-cols-3 gap-6 overflow-y-auto flex-1'}\n                  style={QUESTIONS[step].key === 'items' ? { maxHeight: 'unset' } : {}}>\n                  {QUESTIONS[step].options.map(option => (\n                    <button\n                      key={option}\n                      type=\"button\"\n                      className={`rounded-xl bg-white shadow text-[15px] font-medium py-8 transition border border-gray-200 flex items-center justify-center\n                        ${selectedOptions.includes(option)\n                          ? \"border-[#333333] ring-2 ring-[#333333]\"\n                          : \"hover:border-[#333333]\"}\n                      `}\n                      onClick={() => handleOptionToggle(option)}\n                    >\n                      {option}\n                    </button>\n                  ))}\n                </div>\n                <div className=\"h-6\" />\n              </div>\n              {/* 하단 버튼 영역 */}\n              <div className=\"pt-4 pb-6 border-t border-gray-200 flex justify-between items-center gap-4 shrink-0 bg-white\">\n                <button className=\"text-base text-gray-500 underline\" onClick={() => router.push(\"/\")}>나가기</button>\n                <div className=\"flex gap-2\">\n                  <Button variant=\"ghost\" className=\"text-[#333333] text-base px-6 py-3\" onClick={handleSkip}>건너뛰기</Button>\n                  <Button\n                    className=\"bg-[#333333] text-white rounded-lg px-8 py-3 font-bold text-base\"\n                    onClick={handleConfirm}\n                    disabled={selectedOptions.length === 0}\n                  >\n                    다음\n                  </Button>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n        {/* 오른쪽: 기존 채팅 UI + 결과 안내 메시지(답변 말풍선) */}\n        <div\n          className=\"flex-[1] bg-[#F7F8FA] rounded-xl shadow-md p-4 min-h-[500px] flex flex-col gap-6\"\n          style={{ height: '80vh', maxHeight: '80vh', overflowY: 'auto' }}\n          ref={chatScrollRef}\n        >\n          {/* 기존 채팅/인트로 UI */}\n          {chat.map((msg, idx) => (\n            <div key={idx} className={`flex ${msg.type === \"answer\" ? \"justify-end\" : \"justify-start\"}`}>\n              <ChatBubble\n                text={msg.text}\n                type={msg.type}\n                onEdit={msg.type === \"answer\" && introDone ? () => handleEdit(Math.floor((idx - introMessages.length) / 2)) : undefined}\n              />\n            </div>\n          ))}\n          {/* 현재 타이핑 중인 메시지 */}\n          {!introDone && typingText && (\n            <div className=\"flex justify-start\">\n              <ChatBubble text={typingText} type=\"question\" isTyping={true} showCursor={introStep === 0} />\n            </div>\n          )}\n          {/* 결과 안내 메시지(답변 말풍선) - 두 개로 분리, 순차 등장 */}\n          {showResultMsg1 && recommended.length > 0 && (\n            <div className=\"flex justify-end\">\n              <ChatBubble\n                text={`가장 적합한 봉제공장은\\n${recommended.map(f => (typeof f.name === 'string' && f.name) ? f.name : (typeof f.company_name === 'string' && f.company_name) ? f.company_name : '이름 없음').join(', ')} 입니다!`}\n                type=\"answer\"\n              />\n            </div>\n          )}\n          {showResultMsg2 && (\n            <div className=\"flex justify-end\">\n              <ChatBubble\n                text={`봉제를 진행할 공장을 선택하여\\n공정을 시작해보세요:)`}\n                type=\"answer\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {/* 로그인 필요 모달 */}\n      {showLoginModal && (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-40 z-50\">\n          <div className=\"bg-white rounded-xl shadow-lg p-8 max-w-xs w-full text-center\">\n            <div className=\"text-lg font-bold mb-2\">로그인 후 이용 가능합니다</div>\n            <div className=\"text-gray-500 mb-4\">의뢰하기는 로그인 후 이용하실 수 있습니다.</div>\n            <Button className=\"w-full mb-2\" onClick={() => router.push(\"/sign-in\")}>로그인 화면으로 이동</Button>\n            <Button variant=\"outline\" className=\"w-full\" onClick={() => setShowLoginModal(false)}>닫기</Button>\n          </div>\n        </div>\n      )}\n      {/* 로딩 화면 */}\n      {loading && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50 z-50 transition-opacity duration-700 animate-fade-in\">\n          {renderLoading()}\n        </div>\n      )}\n      {/* 추천 결과 화면 */}\n      {/* showResult && ( */}\n      {/*   <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50 z-50 transition-opacity duration-700 animate-fade-in\"> */}\n      {/*     {renderResultCards()} */}\n      {/*   </div> */}\n      {/* ) */}\n      {/* fade-in, blink 애니메이션 직접 추가 (Tailwind에 없을 수 있음) */}\n      {/* return 문 마지막에 추가 */}\n      <style jsx global>{`\n@keyframes fade-in {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: none; }\n}\n.animate-fade-in {\n  animation: fade-in 0.5s cubic-bezier(0.4,0,0.2,1);\n}\n@keyframes blink {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0; }\n}\n.animate-blink {\n  animation: blink 1s step-end infinite;\n}\n`}</style>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}