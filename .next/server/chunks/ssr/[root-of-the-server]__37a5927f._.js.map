{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n \nexport const supabase = createClient(supabaseUrl, supabaseAnonKey); "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/app/factories/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"@/lib/supabaseClient\";\nimport type { Factory } from \"@/lib/factories\";\nimport Link from \"next/link\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport FactoryMap from \"@/components/FactoryMap\";\nimport { ArrowPathIcon } from \"@heroicons/react/24/outline\";\nimport Image from \"next/image\";\nimport { List, Map as MapIcon } from \"lucide-react\";\n\nfunction getUnique<T>(arr: T[]): T[] {\n  return Array.from(new Set(arr));\n}\n// 태그별 색상 매핑 함수\nfunction getTagColor(tag: string) {\n  switch (tag) {\n    case \"봉제\": return \"bg-blue-100 text-blue-700\";\n    case \"나염\": return \"bg-orange-100 text-orange-700\";\n    case \"자수\": return \"bg-green-100 text-green-700\";\n    case \"샘플\": return \"bg-purple-100 text-purple-700\";\n    case \"QC\": return \"bg-pink-100 text-pink-700\";\n    case \"다이마루\": return \"bg-yellow-100 text-yellow-700\";\n    case \"직기\": return \"bg-cyan-100 text-cyan-700\";\n    default: return \"bg-gray-100 text-gray-700\";\n  }\n}\n\nexport default function FactoriesPage() {\n  const [factories, setFactories] = useState<Factory[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchFactories() {\n      setLoading(true);\n      const { data, error } = await supabase.from(\"donggori\").select(\"*\");\n      console.log(\"공장 데이터:\", data, error);\n      setFactories(data ?? []);\n      setLoading(false);\n    }\n    fetchFactories();\n  }, []);\n\n  // 데모 이미지 배열\n  const DEMO_IMAGES = [\n    \"https://images.unsplash.com/photo-1512436991641-6745cdb1723f?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?auto=format&fit=crop&w=600&q=80\",\n    \"https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=600&q=80\",\n  ];\n\n  return (\n    <div className=\"max-w-[1200px] mx-auto py-16 flex flex-col gap-8\">\n      {loading && <div className=\"text-center py-10 text-lg\">공장 정보를 불러오는 중입니다...</div>}\n      <h1 className=\"text-[40px] font-extrabold text-gray-900 mb-2\">봉제공장 찾기</h1>\n      <p className=\"text-lg text-gray-500\">퀄리티 좋은 의류 제작, 지금 바로 견적을 요청해보세요.</p>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n        {Array.isArray(factories) && factories.length > 0 ? (\n          factories.map((f: any, idx) => (\n            f ? (\n              <div key={f.id ?? idx} className=\"border rounded-xl p-0 bg-white shadow overflow-hidden flex flex-col\">\n                {/* 이미지 영역 */}\n                <div className=\"w-full h-40 bg-gray-100 flex items-center justify-center overflow-hidden\">\n                  <img\n                    src={f.image || DEMO_IMAGES[idx % DEMO_IMAGES.length]}\n                    alt={f.company_name ?? '공장 이미지'}\n                    className=\"object-cover w-full h-full\"\n                  />\n                </div>\n                {/* 정보 영역 */}\n                <div className=\"p-4 flex-1 flex flex-col\">\n                  {/* 태그 영역 */}\n                  <div className=\"flex gap-2 mb-2 flex-wrap\">\n                    {Array.isArray(f.processes) && f.processes.map((tag: any, i: any) => (\n                      <span key={tag + i} className={`rounded px-2 py-1 text-xs font-bold ${getTagColor(tag)}`}>{tag}</span>\n                    ))}\n                  </div>\n                  <div className=\"font-bold text-base mb-1\">{f.company_name ?? '이름 없음'}</div>\n                  <div className=\"text-xs text-gray-500 mb-1 line-clamp-2\">{f.intro ?? '설명 없음'}</div>\n                  <div className=\"text-xs text-gray-500 mb-1\">지역: {f.admin_district ?? '-'}</div>\n                  <div className=\"text-xs text-gray-500 mb-1\">연락처: {f.phone_number ?? '-'}</div>\n                  <div className=\"text-xs text-gray-500 mb-1\">MOQ(최소 주문 수량): {f.moq ?? '-'}</div>\n                  <div className=\"text-xs text-gray-500 mb-1\">주요 품목: {[f.top_items_upper, f.top_items_lower, f.top_items_outer, f.top_items_dress_skirt].filter(Boolean).join(', ')}</div>\n                  <div className=\"text-xs text-gray-400\">위치: 위도 {f.lat ?? '-'}, 경도 {f.lng ?? '-'}</div>\n                </div>\n              </div>\n            ) : null\n          ))\n        ) : (\n          <div className=\"text-center py-20 text-gray-400 text-lg col-span-3\">공장 데이터가 없습니다.</div>\n        )}\n      </div>\n    </div>\n  );\n}\n// 주니어 개발자 설명:\n// - getTagColor 함수로 태그별 색상을 쉽게 관리할 수 있습니다.\n// - 필터 아코디언은 useState로 열림/닫힘 상태를 관리하며, 버튼 클릭 시 토글됩니다.\n// - 카드 내 태그는 map으로 렌더링하며, 공정/나염/자수 등은 색상, 주요 품목은 회색으로 구분합니다.\n// - Tailwind CSS로 스타일을 빠르게 적용할 수 있습니다. "],"names":[],"mappings":"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","debugId":null}}]
}