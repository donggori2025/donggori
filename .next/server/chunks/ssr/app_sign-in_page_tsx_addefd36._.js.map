{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/app/sign-in/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { useSignIn } from \"@clerk/nextjs\";\nimport { useRouter } from \"next/navigation\";\n\nexport default function SignInPage() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { signIn, isLoaded } = useSignIn();\n  const router = useRouter();\n\n  // 소셜 로그인 핸들러\n  const handleSocial = async (provider: any) => {\n    setError(\"\");\n    if (!isLoaded) return;\n    setLoading(true);\n    try {\n      await signIn.authenticateWithRedirect(provider);\n    } catch (err: any) {\n      setError(err.errors?.[0]?.message || \"소셜 로그인 중 오류가 발생했습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 로그인 폼 제출\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    if (!isLoaded) return;\n    setLoading(true);\n    try {\n      const res = await signIn.create({ identifier: email, password });\n      if (res.status === \"complete\") {\n        router.push(\"/my-page\");\n      } else {\n        setError(\"추가 인증이 필요합니다.\");\n      }\n    } catch (err: any) {\n      setError(err.errors?.[0]?.message || \"이메일 또는 비밀번호가 올바르지 않습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-white\">\n      {/* 상단 로고/타이틀/설명 */}\n      <div className=\"mb-8 flex flex-col items-center\">\n        <h1 className=\"text-4xl font-extrabold tracking-tight mb-2\">DONG<span className=\"text-black\">GORI</span></h1>\n        <div className=\"text-lg font-semibold text-gray-700 mb-1\">봉제공장이 필요한 순간, 동고리</div>\n        <div className=\"text-gray-500 text-sm mb-2\">\n          아직 회원 아니신가요? <Link href=\"/sign-up\" className=\"text-blue-500 font-semibold\">회원가입</Link>\n        </div>\n      </div>\n      {/* 로그인 폼 */}\n      <form onSubmit={handleSubmit} className=\"w-full max-w-md bg-white rounded-xl shadow p-8 flex flex-col gap-4\">\n        <label className=\"text-sm font-semibold\">이메일</label>\n        <input\n          type=\"email\"\n          placeholder=\"이메일을 입력해주세요.\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          required\n          className=\"border rounded px-3 py-2\"\n        />\n        <label className=\"text-sm font-semibold\">비밀번호</label>\n        <input\n          type=\"password\"\n          placeholder=\"비밀번호를 입력해주세요.\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          required\n          className=\"border rounded px-3 py-2\"\n        />\n        <div className=\"flex items-center justify-between text-sm mt-2 mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <input\n              type=\"checkbox\"\n              checked={remember}\n              onChange={e => setRemember(e.target.checked)}\n              id=\"remember\"\n              className=\"w-4 h-4\"\n            />\n            <label htmlFor=\"remember\" className=\"text-gray-700\">아이디 저장</label>\n          </div>\n          <a href=\"#\" className=\"text-gray-400 hover:text-black\">비밀번호를 잊으셨나요?</a>\n        </div>\n        {error && <div className=\"text-red-500 text-sm text-center\">{error}</div>}\n        <button type=\"submit\" className=\"w-full bg-black text-white py-3 rounded font-bold text-lg mt-2 hover:bg-gray-900 transition\" disabled={loading}>\n          {loading ? \"로그인 중...\" : \"로그인\"}\n        </button>\n        {/* 구분선 */}\n        <div className=\"flex items-center my-4\">\n          <div className=\"flex-1 h-px bg-gray-200\" />\n          <span className=\"mx-4 text-gray-400 text-sm\">SNS 계정으로 로그인/회원가입</span>\n          <div className=\"flex-1 h-px bg-gray-200\" />\n        </div>\n        {/* 소셜 로그인 버튼 */}\n        <div className=\"flex justify-center gap-6 mt-2\">\n          <button type=\"button\" onClick={() => handleSocial(\"oauth_google\")}\n            className=\"w-12 h-12 rounded-full border flex items-center justify-center bg-white shadow hover:shadow-md\">\n            <Image src=\"/google.svg\" alt=\"구글\" width={28} height={28} />\n          </button>\n          <button type=\"button\" onClick={() => handleSocial(\"oauth_kakao\")}\n            className=\"w-12 h-12 rounded-full border flex items-center justify-center bg-yellow-300 shadow hover:shadow-md\">\n            <Image src=\"/kakao.svg\" alt=\"카카오\" width={28} height={28} />\n          </button>\n          <button type=\"button\" onClick={() => handleSocial(\"oauth_naver\")}\n            className=\"w-12 h-12 rounded-full border flex items-center justify-center bg-green-400 shadow hover:shadow-md\">\n            <Image src=\"/naver.svg\" alt=\"네이버\" width={28} height={28} />\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,uLAAA,CAAA,YAAS,AAAD;IACrC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,aAAa;IACb,MAAM,eAAe,OAAO;QAC1B,SAAS;QACT,IAAI,CAAC,UAAU;QACf,WAAW;QACX,IAAI;YACF,MAAM,OAAO,wBAAwB,CAAC;QACxC,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,WAAW;QACvC,SAAU;YACR,WAAW;QACb;IACF;IAEA,WAAW;IACX,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QACT,IAAI,CAAC,UAAU;QACf,WAAW;QACX,IAAI;YACF,MAAM,MAAM,MAAM,OAAO,MAAM,CAAC;gBAAE,YAAY;gBAAO;YAAS;YAC9D,IAAI,IAAI,MAAM,KAAK,YAAY;gBAC7B,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,WAAW;QACvC,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;;4BAA8C;0CAAI,8OAAC;gCAAK,WAAU;0CAAa;;;;;;;;;;;;kCAC7F,8OAAC;wBAAI,WAAU;kCAA2C;;;;;;kCAC1D,8OAAC;wBAAI,WAAU;;4BAA6B;0CAC7B,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAW,WAAU;0CAA8B;;;;;;;;;;;;;;;;;;0BAI/E,8OAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,8OAAC;wBAAM,WAAU;kCAAwB;;;;;;kCACzC,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;wBACtC,QAAQ;wBACR,WAAU;;;;;;kCAEZ,8OAAC;wBAAM,WAAU;kCAAwB;;;;;;kCACzC,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,KAAK;wBACzC,QAAQ;wBACR,WAAU;;;;;;kCAEZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,MAAK;wCACL,SAAS;wCACT,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,OAAO;wCAC3C,IAAG;wCACH,WAAU;;;;;;kDAEZ,8OAAC;wCAAM,SAAQ;wCAAW,WAAU;kDAAgB;;;;;;;;;;;;0CAEtD,8OAAC;gCAAE,MAAK;gCAAI,WAAU;0CAAiC;;;;;;;;;;;;oBAExD,uBAAS,8OAAC;wBAAI,WAAU;kCAAoC;;;;;;kCAC7D,8OAAC;wBAAO,MAAK;wBAAS,WAAU;wBAA8F,UAAU;kCACrI,UAAU,aAAa;;;;;;kCAG1B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAK,WAAU;0CAA6B;;;;;;0CAC7C,8OAAC;gCAAI,WAAU;;;;;;;;;;;;kCAGjB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAO,MAAK;gCAAS,SAAS,IAAM,aAAa;gCAChD,WAAU;0CACV,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCAAC,KAAI;oCAAc,KAAI;oCAAK,OAAO;oCAAI,QAAQ;;;;;;;;;;;0CAEvD,8OAAC;gCAAO,MAAK;gCAAS,SAAS,IAAM,aAAa;gCAChD,WAAU;0CACV,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCAAC,KAAI;oCAAa,KAAI;oCAAM,OAAO;oCAAI,QAAQ;;;;;;;;;;;0CAEvD,8OAAC;gCAAO,MAAK;gCAAS,SAAS,IAAM,aAAa;gCAChD,WAAU;0CACV,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCAAC,KAAI;oCAAa,KAAI;oCAAM,OAAO;oCAAI,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjE","debugId":null}}]
}