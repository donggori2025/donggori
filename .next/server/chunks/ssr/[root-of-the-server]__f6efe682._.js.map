{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n \nexport const supabase = createClient(supabaseUrl, supabaseAnonKey); "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/components/FactoryMap.tsx"],"sourcesContent":["\"use client\";\nimport { GoogleMap, Marker, useJsApiLoader } from \"@react-google-maps/api\";\nimport { Factory } from \"@/lib/factories\";\n\ninterface FactoryMapProps {\n  factories: Factory[];\n  selectedFactoryId: string;\n  onSelectFactory: (id: string) => void;\n  height?: string;\n}\n\nconst defaultCenter = { lat: 36.5, lng: 127.8 }; // 한반도 중심\n\nexport default function FactoryMap({ factories, selectedFactoryId, onSelectFactory, height = \"420px\" }: FactoryMapProps) {\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY || \"\", // 반드시 환경변수 필요\n  });\n\n  if (!isLoaded) return <div className=\"flex items-center justify-center h-[200px]\">지도를 불러오는 중...</div>;\n\n  const selected = factories.find(f => f.id === selectedFactoryId) || factories[0];\n  const center = selected ? { lat: selected.lat, lng: selected.lng } : defaultCenter;\n\n  return (\n    <GoogleMap\n      mapContainerStyle={{ width: \"100%\", height }}\n      center={center}\n      zoom={7}\n      options={{\n        disableDefaultUI: true,\n        clickableIcons: false,\n      }}\n    >\n      {factories.map(f => (\n        <Marker\n          key={f.id}\n          position={{ lat: f.lat, lng: f.lng }}\n          onClick={() => onSelectFactory(f.id)}\n          icon={f.id === selectedFactoryId ? {\n            url: \"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n            scaledSize: new window.google.maps.Size(40, 40),\n          } : undefined}\n        />\n      ))}\n    </GoogleMap>\n  );\n} "],"names":[],"mappings":";;;;AACA;AADA;;;AAWA,MAAM,gBAAgB;IAAE,KAAK;IAAM,KAAK;AAAM,GAAG,SAAS;AAE3C,SAAS,WAAW,EAAE,SAAS,EAAE,iBAAiB,EAAE,eAAe,EAAE,SAAS,OAAO,EAAmB;IACrH,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAAE;QAClC,kBAAkB,QAAQ,GAAG,CAAC,+BAA+B,IAAI;IACnE;IAEA,IAAI,CAAC,UAAU,qBAAO,8OAAC;QAAI,WAAU;kBAA6C;;;;;;IAElF,MAAM,WAAW,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,sBAAsB,SAAS,CAAC,EAAE;IAChF,MAAM,SAAS,WAAW;QAAE,KAAK,SAAS,GAAG;QAAE,KAAK,SAAS,GAAG;IAAC,IAAI;IAErE,qBACE,8OAAC,+JAAA,CAAA,YAAS;QACR,mBAAmB;YAAE,OAAO;YAAQ;QAAO;QAC3C,QAAQ;QACR,MAAM;QACN,SAAS;YACP,kBAAkB;YAClB,gBAAgB;QAClB;kBAEC,UAAU,GAAG,CAAC,CAAA,kBACb,8OAAC,+JAAA,CAAA,SAAM;gBAEL,UAAU;oBAAE,KAAK,EAAE,GAAG;oBAAE,KAAK,EAAE,GAAG;gBAAC;gBACnC,SAAS,IAAM,gBAAgB,EAAE,EAAE;gBACnC,MAAM,EAAE,EAAE,KAAK,oBAAoB;oBACjC,KAAK;oBACL,YAAY,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;gBAC9C,IAAI;eANC,EAAE,EAAE;;;;;;;;;;AAWnB","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///Users/jay/Desktop/donggori/app/factories/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"@/lib/supabaseClient\";\nimport type { Factory } from \"@/lib/factories\";\nimport Link from \"next/link\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport FactoryMap from \"@/components/FactoryMap\";\nimport { ArrowPathIcon } from \"@heroicons/react/24/outline\";\nimport Image from \"next/image\";\nimport { List, Map as MapIcon } from \"lucide-react\";\n\nfunction getUnique<T>(arr: T[]): T[] {\n  return Array.from(new Set(arr));\n}\n// 태그별 색상 매핑 함수\nfunction getTagColor(tag: string) {\n  switch (tag) {\n    case \"봉제\": return \"bg-blue-100 text-blue-700\";\n    case \"나염\": return \"bg-orange-100 text-orange-700\";\n    case \"자수\": return \"bg-green-100 text-green-700\";\n    case \"샘플\": return \"bg-purple-100 text-purple-700\";\n    case \"QC\": return \"bg-pink-100 text-pink-700\";\n    case \"다이마루\": return \"bg-yellow-100 text-yellow-700\";\n    case \"직기\": return \"bg-cyan-100 text-cyan-700\";\n    default: return \"bg-gray-100 text-gray-700\";\n  }\n}\n\nexport default function FactoriesPage() {\n  const [factories, setFactories] = useState<Factory[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState(\"\");\n  const [selectedProcess, setSelectedProcess] = useState<string[]>([]);\n  const [selectedRegion, setSelectedRegion] = useState<string[]>([]);\n  const [selectedItem, setSelectedItem] = useState<string[]>([]);\n  const [page, setPage] = useState(1);\n  const [view, setView] = useState<\"list\" | \"map\">(\"list\");\n  const perPage = 9;\n  const [selectedFactoryId, setSelectedFactoryId] = useState<string>(\"\");\n\n  // 아코디언 열림/닫힘 상태 관리\n  const [openFilter, setOpenFilter] = useState<{ [key: string]: boolean }>({\n    process: true,\n    region: true,\n    item: true,\n    moq: false,\n    equipment: false,\n  });\n\n  useEffect(() => {\n    async function fetchFactories() {\n      setLoading(true);\n      const { data, error } = await supabase.from(\"donggori\").select(\"*\");\n      console.log(\"공장 데이터:\", data, error);\n      setFactories(data ?? []); // ← undefined 방지\n      setSelectedFactoryId(data?.[0]?.id || \"\");\n      setLoading(false);\n    }\n    fetchFactories();\n  }, []);\n\n  // 동적으로 추출한 컬럼으로만 필터링\n  let filtered = Array.isArray(factories) ? factories.filter(f => {\n    return (\n      (!search || f.name.includes(search) || f.description.includes(search)) &&\n      (selectedRegion.length === 0 || selectedRegion.includes(f.region)) &&\n      (selectedItem.length === 0 || (Array.isArray(f.items) && f.items.some(i => selectedItem.includes(i)))) &&\n      (selectedProcess.length === 0 || (Array.isArray(f.processes) && f.processes.some(p => selectedProcess.includes(p))))\n    );\n  }) : [];\n\n  const totalPages = Math.ceil(filtered.length / perPage);\n  filtered = Array.isArray(filtered) ? filtered.slice((page - 1) * perPage, page * perPage) : [];\n\n  // 뱃지(선택된 필터)\n  const badges = [\n    ...selectedProcess.map(p => ({ value: p, type: \"process\" })),\n    ...selectedRegion.map(r => ({ value: r, type: \"region\" })),\n    ...selectedItem.map(i => ({ value: i, type: \"item\" })),\n  ];\n\n  // 지도 뷰에서 선택된 공장 정보\n  const selectedFactory = filtered.find(f => f.id === selectedFactoryId) || filtered[0];\n\n  // factories 데이터가 바뀔 때마다 옵션 동적 추출\n  const processOptions = getUnique(\n    factories.flatMap(f => Array.isArray(f.processes) ? f.processes : [])\n  );\n  const itemOptions = getUnique(\n    factories.flatMap(f => Array.isArray(f.items) ? f.items : [])\n  );\n  const regionOptions = getUnique(\n    factories.map(f => f.region)\n  );\n\n  console.log(\"filtered:\", filtered);\n  console.log(\"filtered[0]:\", filtered[0]);\n\n  return (\n    <div className=\"max-w-[1200px] mx-auto py-16 flex flex-col gap-8\">\n      {loading && <div className=\"text-center py-10 text-lg\">공장 정보를 불러오는 중입니다...</div>}\n      {/* 상단 대제목/소제목 */}\n      <div>\n        <h1 className=\"text-[40px] font-extrabold text-gray-900 mb-2\">봉제공장 찾기</h1>\n        <p className=\"text-lg text-gray-500\">퀄리티 좋은 의류 제작, 지금 바로 견적을 요청해보세요.</p>\n      </div>\n      {/* 동적 필터 UI */}\n      <div className=\"flex gap-8\">\n        <aside className=\"w-64 shrink-0 hidden lg:block\">\n          <div className=\"bg-white rounded-xl mb-6 py-2\">\n            <div className=\"font-bold mb-4 flex items-center justify-between\">\n              <span>필터</span>\n              <button\n                onClick={() => { setSelectedProcess([]); setSelectedRegion([]); setSelectedItem([]); }}\n                className=\"flex items-center gap-1 text-xs text-gray-500 hover:text-black px-2 py-1 rounded transition\"\n                title=\"필터 초기화\"\n              >\n                <ArrowPathIcon className=\"w-4 h-4\" />\n                <span className=\"sr-only\">초기화</span>\n              </button>\n            </div>\n            <hr className=\"my-3 border-gray-200\" />\n            {/* region 필터 */}\n            <div className=\"mb-6\">\n              <div className=\"font-bold text-[16px] mb-2\">지역</div>\n              <div className=\"flex flex-wrap gap-2\">\n                {regionOptions.map(opt => (\n                  <Button key={opt} size=\"sm\" variant={selectedRegion.includes(opt) ? \"default\" : \"outline\"} className=\"rounded-full px-4\"\n                    onClick={() => setSelectedRegion(selectedRegion.includes(opt) ? selectedRegion.filter(r => r !== opt) : [...selectedRegion, opt])}>{opt}</Button>\n                ))}\n              </div>\n            </div>\n            {/* items 필터 */}\n            <div className=\"mb-6\">\n              <div className=\"font-bold text-[16px] mb-2\">주요 품목</div>\n              <div className=\"flex flex-wrap gap-2\">\n                {itemOptions.map(opt => (\n                  <Button key={opt} size=\"sm\" variant={selectedItem.includes(opt) ? \"default\" : \"outline\"} className=\"rounded-full px-4\"\n                    onClick={() => setSelectedItem(selectedItem.includes(opt) ? selectedItem.filter(i => i !== opt) : [...selectedItem, opt])}>{opt}</Button>\n                ))}\n              </div>\n            </div>\n            {/* processes 필터 */}\n            <div className=\"mb-6\">\n              <div className=\"font-bold text-[16px] mb-2\">주요 공정</div>\n              <div className=\"flex flex-wrap gap-2\">\n                {processOptions.map(opt => (\n                  <Button key={opt} size=\"sm\" variant={selectedProcess.includes(opt) ? \"default\" : \"outline\"} className=\"rounded-full px-4\"\n                    onClick={() => setSelectedProcess(selectedProcess.includes(opt) ? selectedProcess.filter(p => p !== opt) : [...selectedProcess, opt])}>{opt}</Button>\n                ))}\n              </div>\n            </div>\n          </div>\n        </aside>\n        <section className=\"flex-1 min-w-0\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-4\">\n            <input\n              value={search}\n              onChange={e => setSearch(e.target.value)}\n              placeholder=\"공장명, 키워드로 검색하세요.\"\n              className=\"flex-1 min-w-0 border rounded-[0.625rem] px-4 py-2 focus:border-black focus:outline-none\"\n            />\n            <div className=\"flex bg-gray-100 rounded-lg p-1 mt-2 md:mt-0\">\n              <button\n                className={`px-4 py-1 rounded-lg transition flex items-center gap-2 ${view === 'list' ? 'bg-white text-[#333] font-semibold shadow' : 'bg-transparent text-[#555] font-normal'}`}\n                onClick={() => setView('list')}\n              >\n                <List size={28} strokeWidth={view === 'list' ? 2.5 : 2} className={`${view === 'list' ? 'text-[#222]' : 'text-[#bbb]'} scale-80`} />\n                목록\n              </button>\n              <button\n                className={`px-4 py-1 rounded-lg transition flex items-center gap-2 ${view === 'map' ? 'bg-white text-[#333] font-semibold shadow' : 'bg-transparent text-[#555] font-normal'}`}\n                onClick={() => setView('map')}\n              >\n                <MapIcon size={28} strokeWidth={view === 'map' ? 2.5 : 2} className={`${view === 'map' ? 'text-[#222]' : 'text-[#bbb]'} scale-80`} />\n                지도\n              </button>\n            </div>\n          </div>\n          {/* 선택된 필터 뱃지 */}\n          {badges.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mb-4\">\n              {badges.map((b, i) => (\n                <span key={i} className=\"bg-black text-white rounded-full px-3 py-1 text-[14px] font-semibold flex items-center gap-1\">\n                  {b.value}\n                  <button onClick={() => {\n                    if (b.type === \"process\") setSelectedProcess(selectedProcess.filter(p => p !== b.value));\n                    if (b.type === \"region\") setSelectedRegion(selectedRegion.filter(r => r !== b.value));\n                    if (b.type === \"item\") setSelectedItem(selectedItem.filter(i => i !== b.value));\n                  }} className=\"ml-1\">×</button>\n                </span>\n              ))}\n              <Button size=\"sm\" variant=\"ghost\" onClick={() => { setSelectedProcess([]); setSelectedRegion([]); setSelectedItem([]); }}>전체 해제</Button>\n            </div>\n          )}\n          {/* 뷰 전환 */}\n          {view === \"list\" ? (\n            <>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n                {Array.isArray(filtered) && filtered.length === 0 && (\n                  <div className=\"col-span-3 text-center text-gray-400\">검색 결과가 없습니다.</div>\n                )}\n                {Array.isArray(filtered) && filtered.map(f => (\n                  f ? (\n                    <Link key={f.id} href={`/factories/${f.id}`} className=\"group\">\n                      <Card className=\"rounded-xl shadow-sm border bg-white hover:shadow-md transition-shadow cursor-pointer h-full flex flex-col\">\n                        <CardContent className=\"flex-1 flex flex-col p-4\">\n                          <Image src={f.image} alt={f.name} width={400} height={128} className=\"rounded-xl mb-3 h-32 w-full object-cover\" />\n                          <div className=\"flex gap-2 mb-2 flex-wrap\">\n                            {/* 공정, 나염, 자수 등 태그별 색상 적용 */}\n                            {f.processes?.map((tag: string) => (\n                              <span key={tag} className={`rounded px-2 py-1 text-xs font-bold ${getTagColor(tag)}`}>{tag}</span>\n                            ))}\n                            {/* 주요 품목 태그(최대 2개, 회색) */}\n                            {f.items.slice(0, 2).map(i => <span key={i} className=\"bg-gray-100 text-gray-700 rounded px-2 py-1 text-xs\">{i}</span>)}\n                          </div>\n                          <div className=\"font-bold text-base mb-1 group-hover:text-toss-blue transition-colors\">{f.name}</div>\n                          <div className=\"text-xs text-gray-500 mb-1 line-clamp-2\">{f.description}</div>\n                          <div className=\"text-xs text-gray-500 mb-1\">MOQ(최소수량): {f.minOrder}</div>\n                          <div className=\"text-xs text-gray-400\">주요 품목: {f.items.join(\", \")}</div>\n                        </CardContent>\n                      </Card>\n                    </Link>\n                  ) : null\n                ))}\n              </div>\n              {/* 페이지네이션 */}\n              <div className=\"flex justify-center items-center gap-2 mt-8\">\n                {Array.from({ length: totalPages }, (_, i) => (\n                  <Button key={i} size=\"icon\" variant={page === i + 1 ? \"default\" : \"outline\"} className=\"rounded-full w-8 h-8 p-0\"\n                    onClick={() => setPage(i + 1)}>{i + 1}</Button>\n                ))}\n              </div>\n            </>\n          ) : (\n            <div className=\"bg-white rounded-xl shadow p-4\">\n              {/* 구글 맵 연동 */}\n              <div className=\"w-full h-[420px] rounded-xl overflow-hidden mb-4\">\n                <FactoryMap\n                  factories={filtered}\n                  selectedFactoryId={selectedFactoryId}\n                  onSelectFactory={setSelectedFactoryId}\n                />\n              </div>\n              {/* 지도 아래에 선택된 공장 정보 카드 */}\n              {selectedFactory && (\n                <div className=\"flex gap-4 items-center\">\n                  <Image src={selectedFactory.image} alt={selectedFactory.name} width={128} height={96} className=\"w-32 h-24 object-cover rounded-xl\" />\n                  <div className=\"flex-1\">\n                    <div className=\"flex gap-2 mb-1 flex-wrap\">\n                      {selectedFactory.processes?.map((tag: string) => (\n                        <span key={tag} className={`rounded px-2 py-1 text-xs font-bold ${getTagColor(tag)}`}>{tag}</span>\n                      ))}\n                      {selectedFactory.items.slice(0, 2).map(i => <span key={i} className=\"bg-gray-100 text-gray-700 rounded px-2 py-1 text-xs\">{i}</span>)}\n                    </div>\n                    <div className=\"font-bold text-base mb-1\">{selectedFactory.name}</div>\n                    <div className=\"text-xs text-gray-500 mb-1 line-clamp-2\">{selectedFactory.description}</div>\n                    <div className=\"text-xs text-gray-500 mb-1\">MOQ(최소수량): {selectedFactory.minOrder}</div>\n                    <div className=\"text-xs text-gray-400\">주요 품목: {selectedFactory.items.join(\", \")}</div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n}\n// 주니어 개발자 설명:\n// - getTagColor 함수로 태그별 색상을 쉽게 관리할 수 있습니다.\n// - 필터 아코디언은 useState로 열림/닫힘 상태를 관리하며, 버튼 클릭 시 토글됩니다.\n// - 카드 내 태그는 map으로 렌더링하며, 공정/나염/자수 등은 색상, 주요 품목은 회색으로 구분합니다.\n// - Tailwind CSS로 스타일을 빠르게 적용할 수 있습니다. "],"names":[],"mappings":"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","debugId":null}}]
}